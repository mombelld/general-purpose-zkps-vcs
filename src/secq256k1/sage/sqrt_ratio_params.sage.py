

# This file was *autogenerated* from the file sqrt_ratio_params.sage
from sage.all_cmdline import *   # import sage library

_sage_const_256 = Integer(256); _sage_const_1 = Integer(1); _sage_const_2 = Integer(2); _sage_const_0 = Integer(0)# https://www.ietf.org/archive/id/draft-irtf-cfrg-hash-to-curve-16.html#name-sqrt_ratio-for-any-field
def sqrt_ratio_params(p, z) -> tuple([int, int, int, int, int, int, int]):
    for i in range(_sage_const_256 ):
        if ((p - _sage_const_1 ) % (_sage_const_2 **i) == _sage_const_0 ):
            c1 = i
    c2 = (p - _sage_const_1 ) / _sage_const_2 **c1
    c3 = (c2 - _sage_const_1 ) / _sage_const_2 
    c4 = _sage_const_2 **c1 - _sage_const_1                
    c5 = _sage_const_2 **(c1 - _sage_const_1 )              
    c6 = z.powermod(c2, p)
    c7 = z.powermod((c2 + _sage_const_1 ) / _sage_const_2 , p)
    return (
        c1, c2, c3, c4, c5, c6, c7
    )








